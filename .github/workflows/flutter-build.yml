name: Flutter Build, Test & Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
      
      # Setup Java for Android build
      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
      
      # Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2'
          channel: 'stable'
          cache: true
      
      # Cache pub dependencies
      - name: Cache Pub Dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-
      
      # Install dependencies
      - name: Install Dependencies
        run: flutter pub get
      
      # Analyze the code
      - name: Run Analyzer
        run: flutter analyze --no-fatal-infos
      
      # Run tests
      - name: Run Tests
        run: flutter test

  build_android:
    name: Build Android APK
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      # Setup Java for Android build
      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
      
      # Check for keystore secret
      - name: Check for keystore secret
        id: check_keystore
        run: |
          if [[ -n "${{ secrets.KEYSTORE_FILE_BASE64 }}" ]]; then
            echo "has_keystore=true" >> $GITHUB_OUTPUT
          fi

      # Decode Android keystore if available
      - name: Decode Android keystore
        if: steps.check_keystore.outputs.has_keystore == 'true'
        run: |
          mkdir -p android/app/keystore
          echo "${{ secrets.KEYSTORE_FILE_BASE64 }}" | base64 --decode > android/app/keystore/release.jks
          echo "KEYSTORE_FILE=android/app/keystore/release.jks" >> $GITHUB_ENV
          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
          echo "Keystore file configured"
          
      # Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2'
          channel: 'stable'
          cache: true
      
      # Cache pub dependencies
      - name: Cache Pub Dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-
      
      # Install dependencies
      - name: Install Dependencies
        run: flutter pub get
      
      # Create directory for keystore if not exists
      - name: Ensure keystore directory exists
        run: mkdir -p android/app/keystore
      
      # Build APK
      - name: Build APK
        run: flutter build apk --release
        env:
          CI: "true"

      # Build App Bundle for Play Store
      - name: Build App Bundle
        run: flutter build appbundle --release
        env:
          CI: "true"

      # Upload APK as artifact
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
          
      # Upload App Bundle as artifact
      - name: Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: release-bundle
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 7

  build_ios:
    name: Build iOS IPA
    needs: test
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      # Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2'
          channel: 'stable'
          cache: true
      
      # Cache pub dependencies
      - name: Cache Pub Dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-
      
      # Install dependencies
      - name: Install Dependencies
        run: flutter pub get
      
      # Build iOS
      - name: Build iOS
        run: |
          flutter build ios --release --no-codesign
          
      # Archive as artifact (Since we can't fully build IPA without proper signing)
      - name: Upload iOS Build
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ios/iphoneos
          retention-days: 7

  release:
    name: Create GitHub Release
    needs: [build_android, build_ios]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Android APK
        uses: actions/download-artifact@v6
        with:
          name: release-apk
          path: release-apk
          
      - name: Download Android App Bundle
        uses: actions/download-artifact@v6
        with:
          name: release-bundle
          path: release-bundle
          
      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          cp release-apk/app-release.apk release-assets/schengen-tracker-${{ github.ref_name }}.apk
          cp release-bundle/app-release.aab release-assets/schengen-tracker-${{ github.ref_name }}.aab
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release-assets/schengen-tracker-${{ github.ref_name }}.apk
            release-assets/schengen-tracker-${{ github.ref_name }}.aab
          draft: false
          prerelease: false
          generate_release_notes: true
          name: "Schengen Tracker ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
